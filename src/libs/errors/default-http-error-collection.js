import {
  BAD_REQUEST_400,
  ENDPOINT_NOT_FOUND_404,
  FAILED_ON_SERIALIZATION_VALIDATION_500,
  INTERNAL_SERVER_ERROR_500,
  INVALID_JSON_SYNTAX_400,
  PAYLOAD_TOO_LARGE_413,
  RESOURCE_NOT_ACCEPTABLE_406,
  SERVER_TIMEOUT_408,
  SERVICE_UNAVAILABLE_EXCEPTION_503,
  TOO_MANY_REQUESTS_429,
  UNAUTHORIZED_ACCESS_401,
  UNSUPPORTED_MEDIA_TYPE_415,
} from "#libs/errors/http.errors.js";
import {
  BadRequestException,
  ConflictException,
  ForbiddenException,
  ResourceAlreadyExistException,
  ResourceNotFoundException,
  UnauthorizedException,
  UnprocessableEntityException,
} from "#libs/errors/domain.errors.js";

export const defaultHttpErrorCollection = {
  [BAD_REQUEST_400.name]: {
    code: 400000,
    statusCode: 400,
    userMessage: "Bad request",
    developerMessage: "Bad request",
  },
  [BadRequestException.name]: {
    code: 400001,
    statusCode: 400,
    userMessage: "Bad request",
    developerMessage: "Bad request",
  },
  [UNAUTHORIZED_ACCESS_401.name]: {
    code: 40100,
    statusCode: 401,
    userMessage: "Unauthorized",
    developerMessage: "JWT is not valid",
  },
  [UnauthorizedException.name]: {
    code: 40101,
    statusCode: 401,
    userMessage: "Unauthorized",
    developerMessage: "Access to this resource is denied",
  },
  [ForbiddenException.name]: {
    code: 4003000,
    statusCode: 403,
    userMessage: "You do not have permission to access this resource",
    developerMessage: "Unable to access for this user",
  },
  [ResourceNotFoundException.name]: {
    code: 404000,
    statusCode: 404,
    userMessage: "Resource not found",
    developerMessage: "Resource not found",
  },
  [ENDPOINT_NOT_FOUND_404.name]: {
    code: 404001,
    statusCode: 404,
    userMessage: "Endpoint not found",
    developerMessage: "Endpoint not found",
  },
  [ResourceAlreadyExistException.name]: {
    code: 409000,
    statusCode: 409,
    userMessage: "Conflict",
    developerMessage: "Conflict",
  },
  [ConflictException.name]: {
    code: 409001,
    statusCode: 409,
    userMessage: "Conflict",
    developerMessage: "Conflict",
  },
  [UnprocessableEntityException.name]: {
    code: 422000,
    statusCode: 422,
    userMessage: "Unprocessable entity",
    developerMessage: "Unprocessable entity",
  },
  [INVALID_JSON_SYNTAX_400.name]: {
    code: 400001,
    statusCode: 400,
    userMessage: "Bad request",
    developerMessage: "The JSON sent in the request has an invalid syntax.",
  },
  [RESOURCE_NOT_ACCEPTABLE_406.name]: {
    code: 406000,
    statusCode: 406,
    userMessage: "Not acceptable",
    developerMessage: "Not acceptable",
  },
  [SERVER_TIMEOUT_408.name]: {
    code: 4008000,
    statusCode: 408,
    userMessage: "Server timeout",
    developerMessage: "The server did not receive a complete request message within the time that it was prepared to wait.",
  },
  [PAYLOAD_TOO_LARGE_413.name]: {
    code: 413000,
    statusCode: 413,
    userMessage: "Payload too large",
    developerMessage: "Payload too large",
  },
  [UNSUPPORTED_MEDIA_TYPE_415.name]: {
    code: 415000,
    statusCode: 415,
    userMessage: "Unsupported media type",
    developerMessage: "Unsupported media type",
  },
  [TOO_MANY_REQUESTS_429.name]: {
    code: 429000,
    statusCode: 429,
    userMessage: "Too many requests",
    developerMessage: "Too many requests",
  },
  [INTERNAL_SERVER_ERROR_500.name]: {
    code: 500000,
    statusCode: 500,
    userMessage: "Internal server error",
    developerMessage: "Server is on coffee time",
  },
  [FAILED_ON_SERIALIZATION_VALIDATION_500.name]: {
    code: 500002,
    statusCode: 500,
    userMessage: "Internal server error",
    developerMessage: "Failed on serialization validation",
  },
  [SERVICE_UNAVAILABLE_EXCEPTION_503.name]: {
    code: 503000,
    statusCode: 503,
    userMessage: "Service Unavailable",
    developerMessage: "Service Unavailable",
  },
};
